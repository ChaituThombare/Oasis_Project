import javax.swing.*;
import java.awt.*;

// The main class that encapsulates the entire application.
public class ATM_Interface {
    // Static inner class to model the bank account details and operations.
    public static class BankAccount {
        String name;
        String userName;
        String password;
        String accountNo;
        float balance = 100000f;  // Default balance
        StringBuilder transactionHistory = new StringBuilder();  

        public BankAccount(String name, String userName, String password, String accountNo) {
            this.name = name;
            this.userName = userName;
            this.password = password;
            this.accountNo = accountNo;
        }

        public void deposit(float amount) {
            balance += amount;
            transactionHistory.append("Deposited: ").append(amount).append("\n");
            JOptionPane.showMessageDialog(null, "Successfully Deposited: " + amount);
        }

        public void withdraw(float amount) {
            if (amount > balance) {
                JOptionPane.showMessageDialog(null, "Insufficient funds.");
            } else {
                balance -= amount;
                transactionHistory.append("Withdrawn: ").append(amount).append("\n");
                JOptionPane.showMessageDialog(null, "Successfully Withdrawn: " + amount);
            }
        }

        public void transfer(float amount, String recipient) {
            if (amount > balance) {
                JOptionPane.showMessageDialog(null, "Insufficient funds.");
            } else {
                balance -= amount;
                transactionHistory.append("Transferred: ").append(amount).append(" to ").append(recipient).append("\n");
                JOptionPane.showMessageDialog(null, "Successfully Transferred: " + amount + " to " + recipient);
            }
        }

        public void checkBalance() {
            JOptionPane.showMessageDialog(null, "Current Balance: " + balance);
        }

        public void showTransactionHistory() {
            if (transactionHistory.length() == 0) {
                JOptionPane.showMessageDialog(null, "No transaction history.");
            } else {
                JOptionPane.showMessageDialog(null, "Transaction History:\n" + transactionHistory);
            }
        }
    }

    // GUI class for handling user interaction with the bank account.
    public static class ATMGUI extends JFrame {
        private BankAccount account;
        private JFrame operationsFrame;

        public ATMGUI() {
            super("ATM Interface");
            setSize(300, 200);
            setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            setLayout(new BorderLayout());
            initializeUI();
            setLocationRelativeTo(null);
        }

        private void initializeUI() {
            JTabbedPane tabbedPane = new JTabbedPane();
            JPanel registerPanel = createRegisterPanel();
            JPanel loginPanel = createLoginPanel();

            tabbedPane.addTab("Register", registerPanel);
            tabbedPane.addTab("Login", loginPanel);
            add(tabbedPane, BorderLayout.CENTER);
        }

        // Creates the registration panel for new users.
        private JPanel createRegisterPanel() {
            JPanel panel = new JPanel(new GridLayout(5, 2));

            JTextField nameField = new JTextField();
            JTextField userNameField = new JTextField();
            JPasswordField passwordField = new JPasswordField();
            JTextField accountNoField = new JTextField();
            JButton registerButton = new JButton("Register");

            registerButton.addActionListener(e -> {
                String name = nameField.getText();
                String userName = userNameField.getText();
                String password = new String(passwordField.getPassword());
                String accountNo = accountNoField.getText();
                account = new BankAccount(name, userName, password, accountNo);
                JOptionPane.showMessageDialog(this, "Registration completed. Please login.");
            });

            panel.add(new JLabel("Name:"));
            panel.add(nameField);
            panel.add(new JLabel("Username:"));
            panel.add(userNameField);
            panel.add(new JLabel("Password:"));
            panel.add(passwordField);
            panel.add(new JLabel("Account Number:"));
            panel.add(accountNoField);
            panel.add(new JLabel());
            panel.add(registerButton);

            return panel;
        }

        // Creates the login panel for existing users.
        private JPanel createLoginPanel() {
            JPanel panel = new JPanel(new GridLayout(3, 2));

            JTextField userNameField = new JTextField();
            JPasswordField passwordField = new JPasswordField();
            JButton loginButton = new JButton("Login");

            loginButton.addActionListener(e -> {
                String userName = userNameField.getText();
                String password = new String(passwordField.getPassword());
                if (account != null && userName.equals(account.userName) && password.equals(account.password)) {
                    JOptionPane.showMessageDialog(this, "Login successful!!");
                    showOperationsPanel();
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid Credentials", "Error", JOptionPane.ERROR_MESSAGE);
                }
            });

            panel.add(new JLabel("Username:"));
            panel.add(userNameField);
            panel.add(new JLabel("Password:"));
            panel.add(passwordField);
            panel.add(new JLabel());
            panel.add(loginButton);

            return panel;
        }

        // Shows the operations panel after successful login.
        private void showOperationsPanel() {
            operationsFrame = new JFrame("ATM Operations");
            operationsFrame.setSize(400, 300);
            operationsFrame.setLayout(new GridLayout(3, 1));

            JButton viewBalanceButton = new JButton("Check Balance");
            viewBalanceButton.addActionListener(e -> account.checkBalance());
            operationsFrame.add(viewBalanceButton);

            JButton depositButton = new JButton("Deposit Money");
            depositButton.addActionListener(e -> {
                String amountString = JOptionPane.showInputDialog("Enter amount to deposit:");
                float amount = Float.parseFloat(amountString);
                account.deposit(amount);
            });
            operationsFrame.add(depositButton);

            JButton withdrawButton = new JButton("Withdraw Money");
            withdrawButton.addActionListener(e -> {
                String amountString = JOptionPane.showInputDialog("Enter amount to withdraw:");
                float amount = Float.parseFloat(amountString);
                account.withdraw(amount);
            });
            operationsFrame.add(withdrawButton);

            JButton transferButton = new JButton("Transfer Money");
            transferButton.addActionListener(e -> {
                String amountString = JOptionPane.showInputDialog("Enter amount to transfer:");
                String recipient = JOptionPane.showInputDialog("Enter recipient's name:");
                float amount = Float.parseFloat(amountString);
                account.transfer(amount, recipient);
            });
            operationsFrame.add(transferButton);

            JButton transactionHistoryButton = new JButton("View Transaction History");
            transactionHistoryButton.addActionListener(e -> account.showTransactionHistory());
            operationsFrame.add(transactionHistoryButton);

            JButton logoutButton = new JButton("Logout");
            logoutButton.addActionListener(e -> {
                operationsFrame.dispose();
                this.setVisible(true);
            });
            operationsFrame.add(logoutButton);

            operationsFrame.setLocationRelativeTo(null);
            operationsFrame.setVisible(true);
            this.setVisible(false);
        }
    }

    // The main method to launch the ATM application.
    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new ATMGUI().setVisible(true));
    }
}
